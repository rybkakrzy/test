parameters:
  - name: testEnvironment
    type: string
    values:
      - dev
      - uat
      - pre

jobs:
  - job: run_tests
    displayName: "Run Playwright tests"
    pool:
      name: BSK-only-tests-runner-pool

    variables:
      artifactDir: "$(Build.ArtifactStagingDirectory)"
      reportDir: "$(artifactDir)/test-report/playwright"
      junitFile: "$(artifactDir)/test-results-$(parameters.testEnvironment).xml"

    steps:
      # Pobranie repo
      - checkout: self
        displayName: "Checkout repository"

      # Sekret z KeyVault (DEV/ UAT / PRE)
      - task: AzureKeyVault@2
        inputs:
          azureSubscription: "P09811-KeyVault-SVC-NONPROD"
          KeyVaultName: "P09811-doc2-$(parameters.testEnvironment | toUpper)-KV"
          SecretsFilter: "*"
          RunAsPreJob: false
        displayName: "Download secrets [${{ parameters.testEnvironment | toUpper }}]"

      # Autoryzacja do prywatnego feeda PIP
      - task: PipAuthenticate@1
        inputs:
          artifactFeeds: "IngOne/P09811-incoming-pypi"
        displayName: "Authenticate Pip"

      # Instalacja zależności + przygotowanie katalogów
      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install chromium
          mkdir -p "$(reportDir)"
        displayName: "Install dependencies & prepare dirs"

      # Uruchomienie testów
      - script: |
          pytest \
            --junitxml="$(junitFile)" \
            --tracing retain-on-failure \
            --video retain-on-failure \
            --screenshot only-on-failure \
            --output="$(reportDir)"
        displayName: "Run Playwright tests"

      # Publikacja artefaktów
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: "$(artifactDir)/test-report"
          artifactName: "test-report-$(parameters.testEnvironment)"
          publishLocation: "pipeline"
        condition: succeededOrFailed()
        displayName: "Publish test report artifacts"

      # Publikacja wyników testów (JUnit)
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "$(junitFile)"
          testRunTitle: "Playwright tests [${{ parameters.testEnvironment }}]"
          mergeTestResults: true
        condition: succeededOrFailed()
        displayName: "Publish test results"
