[TestFixture]
public class FormatterPolasServiceTests
{
    private IFormatterPolasService _sut;

    [SetUp]
    public void SetUp()
    {
        _sut = new FormatterPolasService();
    }

    [Test]
    public void ToWords_WhenAmountIsNull_ThrowsArgumentNullException()
    {
        int? amount = null;

        var ex = Assert.Throws<ArgumentNullException>(() => _sut.ToWords(amount));

        Assert.Multiple(() =>
        {
            Assert.That(ex, Is.Not.Null);
            Assert.That(ex!.ParamName, Is.EqualTo("amount"));
        });
    }

    [TestCase(true)]             // bool
    [TestCase(false)]            // bool
    [TestCase('x')]              // char
    [TestCaseSource(nameof(GetDateTimes))] // DateTime
    public void ToWords_WhenNotConvertibleToDecimal_ThrowsArgumentException(IConvertible value)
    {
        var ex = Assert.Throws<ArgumentException>(() => _sut.ToWords(value));

        Assert.Multiple(() =>
        {
            Assert.That(ex, Is.Not.Null);
            Assert.That(ex!.Message, Does.Contain("cannot be converted to a number"));
        });
    }

    private static IEnumerable<DateTime> GetDateTimes()
    {
        yield return DateTime.Now;
        yield return new DateTime(2000, 1, 1);
    }
}
