import { Component, HostBinding, Input } from '@angular/core';

type LoadingMode = 'shimmer' | 'spinner-text' | 'spinner' | 'spinner-mini';
type LoadingTheme = 'normal' | 'white';

@Component({
  selector: 'app-loading-placeholder',
  templateUrl: './loading-placeholder.component.html',
  styleUrls: ['./loading-placeholder.component.scss'],
})
export class LoadingPlaceholderComponent {
  // Text displayed in 'spinner-text' mode
  @Input() text: string = '';

  // Layout variant (what to render)
  @Input() mode: LoadingMode = 'shimmer';

  // Color theme (how to render)
  @Input() theme: LoadingTheme = 'normal';

  // Add a host class for easier theming in SCSS
  @HostBinding('class.theme-white') get isWhite(): boolean {
    return this.theme === 'white';
  }
}



<!-- Shimmer placeholder -->
<div *ngIf="mode === 'shimmer'" class="shimmer-wrapper">
  <div class="shimmer-line"></div>
</div>

<!-- Spinner with text -->
<div *ngIf="mode === 'spinner-text'" class="spinner-text-wrapper">
  <div class="spinner"></div>
  <p class="loading-text">{{ text }}</p>
</div>

<!-- Spinner only -->
<div *ngIf="mode === 'spinner'" class="spinner-only-wrapper">
  <div class="spinner"></div>
</div>

<!-- Mini spinner (inline) -->
<div *ngIf="mode === 'spinner-mini'" class="spinner-mini"></div>



/* -------------------------- Base (normal theme) -------------------------- */

/* Regular spinner */
.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-top-color: #3f51b5;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: auto;
}

/* Mini spinner for buttons/inline */
.spinner-mini {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(0, 0, 0, 0.1);
  border-top-color: #3f51b5;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  display: inline-block;
  vertical-align: middle;
  margin-left: 4px; // adjust/remove depending on context
}

/* Spinner + text layout */
.spinner-text-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.loading-text {
  font-size: 14px;
  color: #555;
}

/* Shimmer effect (Facebook-like) */
.shimmer-wrapper {
  width: 100%;
  height: 20px;
  background: #f6f7f8;
  position: relative;
  overflow: hidden;
  border-radius: 4px;
}

.shimmer-line {
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to right,
    #f6f7f8 0%,
    #e0e0e0 20%,
    #f6f7f8 40%,
    #f6f7f8 100%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s linear infinite;
}

/* Layout helper */
.spinner-only-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Animations */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes shimmer {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 100% 0;
  }
}

/* -------------------------- White theme (light-on-dark) --------------------------
   Applied when host has class .theme-white (via HostBinding).
   Use on dark backgrounds — spinner and text become bright/white-ish.
------------------------------------------------------------------------------- */

:host.theme-white {
  .spinner {
    border: 4px solid rgba(255, 255, 255, 0.25);
    border-top-color: #ffffff; // bright top color to pop on dark bg
  }

  .spinner-mini {
    border: 2px solid rgba(255, 255, 255, 0.25);
    border-top-color: #ffffff;
  }

  .loading-text {
    color: rgba(255, 255, 255, 0.9);
  }

  .shimmer-wrapper {
    background: rgba(255, 255, 255, 0.12);
  }

  .shimmer-line {
    background: linear-gradient(
      to right,
      rgba(255, 255, 255, 0.12) 0%,
      rgba(255, 255, 255, 0.32) 20%,
      rgba(255, 255, 255, 0.12) 40%,
      rgba(255, 255, 255, 0.12) 100%
    );
    background-size: 200% 100%;
  }
}





  <app-loading-placeholder *ngIf="isSaving"
    mode="spinner-mini"
    theme="white">
  </app-loading-placeholder>


















@Input() mode: 'shimmer' | 'spinner-text' | 'spinner' | 'spinner-mini' = 'shimmer';

<!-- Mini spinner -->
<div *ngIf="mode === 'spinner-mini'" class="spinner-mini"></div>

// Mini spinner — do użycia np. inline w buttonie lub tekście
.spinner-mini {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(0, 0, 0, 0.1);
  border-top-color: #3f51b5;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  display: inline-block;
  vertical-align: middle;
  margin-left: 4px; // można usunąć jeśli niepotrzebny margines
}


<span>
  Ładowanie danych
  <app-loading-placeholder mode="spinner-mini"></app-loading-placeholder>
</span>



import { Component, Input } from '@angular/core';

@Component({
  selector: 'app-loading-placeholder',
  templateUrl: './loading-placeholder.component.html',
  styleUrls: ['./loading-placeholder.component.scss'],
})
export class LoadingPlaceholderComponent {
  // Tekst do wyświetlenia
  @Input() text: string = '';

  /**
   * Tryb wyświetlania:
   * - 'shimmer': animowany placeholder jak na Facebooku
   * - 'spinner-text': spinner z tekstem pod spodem
   * - 'spinner': tylko spinner
   */
  @Input() mode: 'shimmer' | 'spinner-text' | 'spinner' = 'shimmer';
}



<!-- Shimmer placeholder -->
<div *ngIf="mode === 'shimmer'" class="shimmer-wrapper">
  <div class="shimmer-line"></div>
</div>

<!-- Spinner with text -->
<div *ngIf="mode === 'spinner-text'" class="spinner-text-wrapper">
  <div class="spinner"></div>
  <p class="loading-text">{{ text }}</p>
</div>

<!-- Spinner only -->
<div *ngIf="mode === 'spinner'" class="spinner-only-wrapper">
  <div class="spinner"></div>
</div>



// Spinner
.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-top-color: #3f51b5;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: auto;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Spinner + text layout
.spinner-text-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.loading-text {
  font-size: 14px;
  color: #555;
}

// Shimmer effect
.shimmer-wrapper {
  width: 100%;
  height: 20px;
  background: #f6f7f8;
  position: relative;
  overflow: hidden;
  border-radius: 4px;
}

.shimmer-line {
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to right,
    #f6f7f8 0%,
    #e0e0e0 20%,
    #f6f7f8 40%,
    #f6f7f8 100%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite linear;
}

@keyframes shimmer {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 100% 0;
  }
}

// Spinner only wrapper (for consistent layout if needed)
.spinner-only-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
}



<!-- Shimmer placeholder -->
<app-loading-placeholder mode="shimmer"></app-loading-placeholder>

<!-- Spinner with text -->
<app-loading-placeholder
  mode="spinner-text"
  text="Loading data, please wait..."
></app-loading-placeholder>

<!-- Spinner only -->
<app-loading-placeholder mode="spinner"></app-loading-placeholder>
